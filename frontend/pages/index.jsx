import { useEffect, useState, memo } from "react";
import { motion } from "framer-motion";
import { useRouter } from "next/router";
import Slider from "react-slick";
import Head from "next/head";
import axios from "axios";
import moment from "moment";


import Hero from "../components/hero";
import NextArrow1 from "../components/arrows/nextArrow";
import PrevArrow1 from "../components/arrows/prevArrow";
import NewSletter from "../components/newsletter";
import HeroLoading from "../components/loadings/heroLoading";
import LatestArticles from "../components/loadings/latestArticles";
import MoreArticles from "../components/loadings/moreArticles";
import Footer from "../components/footer";


const Home = () => {

    const [latestPost, setLatestPost] = useState([]);
    const [onePost, setOnePost] = useState({});
    const [editorPick, setEditorPick] = useState([]);
    const [morePost, setMorePost] = useState([]);

    const [loading, setLoading] = useState(true);
    const [loading2, setLoading2] = useState(true);
    const [loading3, setLoading3] = useState(true);

    useEffect(() => {

        axios.get("http://localhost:1337/api/posts?sort[0]=title&sort[1]=description&populate=*&pagination[page]=1&pagination[pageSize]=6").then(res => {
            setOnePost(res.data.data[0]);
            setLatestPost(res.data.data);
            setLoading(false);
        });

        axios.get("http://localhost:1337/api/posts?filters[editorPick][$eq]=true&sort[0]=title&sort[1]=description&populate=*").then(res => {
            setEditorPick(res.data.data);
            setLoading2(false);
        });

        axios.get("http://localhost:1337/api/posts?sort[0]=title&sort[1]=description&populate=*&pagination[pageSize]=7").then(res => {
            setMorePost(res.data.data);
            setLoading3(false);
        });

    }, []);

    const router = useRouter();

    var settings = {
        dots: true,
        infinite: true,
        speed: 500,
        slidesToShow: 4,
        slidesToScroll: 4,
        initialSlide: 4,
        nextArrow: <p>dale</p>,
        prevArrow: <p>dale2</p>,
        responsive: [
          {
            breakpoint: 1024,
            settings: {
              slidesToShow: 3,
              slidesToScroll: 3,
              initialSlide: 3
            }
          },
          {
            breakpoint: 600,
            settings: {
              slidesToShow: 2,
              slidesToScroll: 2,
              initialSlide: 2
            }
          },
          {
            breakpoint: 480,
            settings: {
              slidesToShow: 1,
              slidesToScroll: 1,
              initialSlide: 1
            }
          }
        ]
    };

    return (

        <div className="px-4 md:px-12 lg:px-24">

            <Head>
                <title>The Blog</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-regular-rounded/css/uicons-regular-rounded.css" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Hero />

            {
                loading ?
                    <HeroLoading />
                    :
                    <motion.article key={onePost.id} whileTap={{ scale: 0.9 }} onClick={() => router.push(`/article/${onePost.id}`)} className="cursor-pointer rounded-md p-6 bg-slate-100 md:grid md:grid-cols-6 my-14">
                        <img className="md:col-span-3 rounded-md w-full md:h-96 md:w-96 object-cover" src={onePost?.attributes?.cover.data.attributes.url} alt="" />

                        <div className="md:col-span-3 md:px-10 my-auto">
                            <span className="text-slate-400 font-regular text-sm">{moment(onePost?.attributes?.publishedAt).format('LL')}</span>
                            <h2 className="text-slate-900 font-bold my-2 text-xl">{onePost?.attributes?.title}</h2>
                            <p className="text-slate-500 font-regular text-base">{onePost?.attributes?.description}</p>
                        </div>
                    </motion.article>
            }

            <section>

                <p className="text-slate-900 font-bold text-base">Latest articles</p>

                {
                    loading ?
                        <LatestArticles />
                        :
                        <div className="mt-6 space-y-4">

                            {latestPost.map((item, key) =>

                                <motion.div key={key} whileTap={{ scale: 0.9 }} onClick={() => router.push(`/article/${item.id}`)} className="rounded-md hover:bg-slate-100 cursor-pointer flex md:p-2">
                                    <img className="rounded-md w-14 h-14 object-cover" src={item.attributes.cover?.data.attributes.url} alt="" />

                                    <div className="ml-4">
                                        <h2 className="font-medium text-slate-900 text-base line-clamp-2 md:line-clamp-0">{item.attributes.title}</h2>
                                        <p className="text-slate-400 text-sm">{moment(item.attributes.publishedAt).format('LL')}</p>
                                    </div>
                                </motion.div>

                            )}

                        </div>
                }

            </section>

            <section className="my-14">

                <p className="text-slate-900 font-bold text-base">Editor's Pick</p>

                {
                    loading2 ?
                    <p>hola</p>
                    :
                    <div className="mt-6 grid grid-cols-4 gap-4">
                        
                        {/* <Slider {...settings}> */}

                            {editorPick.map((item, key) =>

                                <motion.div key={key} whileTap={{ scale: 0.9 }} onClick={() => router.push(`/article/${item.id}`)} className="rounded-md space-y-2 hover:bg-slate-100 cursor-pointer flex flex-col p-2">

                                    <img className="rounded-md mx-auto w-72 h-48 object-cover" src={item.attributes.cover?.data.attributes.url} alt="" />

                                    <span className="text-slate-400 text-xs">{moment(item.attributes.publishedAt).format('LL')}</span>
                                    <h2 className="font-medium text-slate-900 text-lg line-clamp-2">{item.attributes.title}</h2>
                                    <p className="text-slate-400 text-sm line-clamp-4">{item.attributes.description}</p>

                                </motion.div>

                            )}

                        {/* </Slider> */}

                    </div>
                }

            </section>

            <section className="my-14">

                <p className="text-slate-900 font-bold text-base">More articles</p>

                {
                    loading3 ?
                        <MoreArticles />
                        :
                        <div className="mt-6 flex flex-col space-y-8 md:space-y-4">

                            {morePost.map((item, key) =>

                                <motion.div key={key} whileTap={{ scale: 0.9 }} onClick={() => router.push(`/article/${item.id}`)} className="rounded-md hover:bg-slate-100 cursor-pointer flex flex-col md:flex-row md:p-2">
                                    <img className="rounded-md w-full md:w-40 h-40 object-cover" src={item.attributes.cover?.data.attributes.url} alt="" />

                                    <div className="md:ml-4 space-y-1">
                                        <span className="text-slate-400 text-sm">{moment(item.attributes.publishedAt).format('LL')}</span>
                                        <h2 className="font-medium text-slate-900 text-lg">{item.attributes.title}</h2>
                                        <p className="text-slate-400 text-sm line-clamp-3">{item.attributes.description}</p>
                                    </div>
                                </motion.div>

                            )}

                        </div>
                }

            </section>

            <NewSletter />

            <Footer />

        </div>

    );

}


export default memo(Home);
